version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dairy-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env.production
    volumes:
      - dairy_data:/app/data
      - dairy_uploads:/app/uploads
      - dairy_logs:/app/logs
    networks:
      - dairy_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web App
  frontend:
    build:
      context: ./frontend-web
      dockerfile: Dockerfile
    container_name: dairy-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    env_file:
      - ./frontend-web/.env.production
    depends_on:
      - backend
    networks:
      - dairy_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Reverse Proxy (Optional - for production with SSL)
  nginx-proxy:
    image: nginx:alpine
    container_name: dairy-nginx-proxy
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - dairy_network
    profiles:
      - ssl

volumes:
  dairy_data:
    driver: local
  dairy_uploads:
    driver: local
  dairy_logs:
    driver: local

networks:
  dairy_network:
    driver: bridge